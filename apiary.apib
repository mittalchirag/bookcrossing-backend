FORMAT: 1A
HOST: http://api.bookcrossing.tech/

# blur.tech

BookCrossing - simple service that allow students to share and find books.

### Books [/books]

### Get Book By ID [GET/books/3]
+ Response 200 (application/json)

    
        {
            "status": "OK",
            "data": [
                {
                    "id": "3",
                    "label": "book3",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "",
                    "genres": ["1","4","8"],
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "language":"rus"
                    
                }
            ]
        }
        
### Get Book By Author [GET/books/author/author1]

+ Response 200 (application/json)

        {
            "status": "OK",
            "data": [
                {
                    "id": "3",
                    "label": "book3",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "",
                    "dateRes":"",
                    "dateCreate":"1537987557",
                    "genres": ["1","4","8"],
                    "language":"rus"
                    
                }
            ]
        }
        
### Search Book [GET /books/search/guide]
This feature  also searching by author.
+ Response 200 (application/json)

        
        {
            "status": "OK",
            "data": [
                {
                    "id": "123",
                    "label": "The Hitchhiker's Guide to the Galaxy",
                    "author": "Douglas Adams",
                    "owner": "2",
                    "reciever": "",
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "genres": ["2"],
                    "language":"rus"
                
                }, {
                    "id": "2",
                    "label": "Material Guidelines",
                    "author": "author3",
                    "owner": "3",
                    "reciever": "",
                    "dateRes":"",
                    "dateCreate":"1537987557",
                    "genres": ["1","7"],
                    "language":"rus"
                }
            ]
        }
        
        
### Create Book [POST]

+ Request 

                {
                    "label": "book3",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "",
                    "dateRes":"",
                    "dateCreate":"1537987557",
                    "genres": ["1","4","8"],
                    "language":"rus"
                    
                }


+ Response 201 (application/json)


        {
            "status": "OK",
            "data": {
                    "id": "3"
                    "label": "book3",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "",
                    "dateRes":"",
                    "dateCreate":"1537987557",
                    "genres": ["1","4","8"],
                    "language":"rus"
                }
            
        }
        
### Delete Book By ID [DELETE/books/3]

+ Response 200 (application/json)

            {
                "status": "OK"
            }
### Approve Book Request [POST/books/approve]

+ Request (application/json)

            {
                "user_id":  "1",
                "book_id": "2"
            }
            
+ Response 201 (application/json)

    + Body

            {
              "status": "OK",
                "data": {
                    "id": "1",
                    "label": "book1",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "1",
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "genres": ["1","4","8"],
                    "language":"rus"
                }
            }
            


### BookShelf [/bookshelf]

### List Recieved Books [GET/bookshelf/received/1]

+ Response 200 (application/json)

        {
            "status": "OK",
            "data": [
                {
                    "id": "1",
                    "label": "book1",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "1"
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "genres": ["1","4","8"]
                    "language":"rus"
                    
                }, {
                    "id": "2",
                    "label": "book2",
                    "author": "author1",
                    "owner": "3",
                    "reciever": "1",
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "genres": ["1","7"],
                    "language":"rus"
                }
            ]
        }
        
        

### Get Shared Books [GET/bookshelf/shared/1]
+ Response 200 (application/json)

        {
            "status": "OK",
            "data": [
                {
                    "id": "1",
                    "label": "book1",
                    "author": "author1",
                    "owner": "2",
                    "reciever": "1",
                    "genres": ["1","4","8"],
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "language":"eng"
                    
                }, {
                    "id": "2",
                    "label": "book2",
                    "author": "author1",
                    "owner": "3",
                    "reciever": "1",
                    "dateRes":"1537988000",
                    "dateCreate":"1537987557",
                    "genres": ["1","7"],
                    "language":"rus"
            }
            ]
        }
        
## Users [/users]

### Get User By ID[GET/users/3]

+ Response 200 (application/json)

        {
            "status": "OK",
            "data": 
            {
                "id":"1",
                "login":"SrgGrch",
                "university":"NSTU",
                "email":"example@stud.nstu.ru",
                "password":"qwer2017",
                "city":"Novosibirsk",
                "genres": ["1", "3"],
                "rating":"4.3"
            }
        }
        
### Create New User [POST/users]

+ Request (application/json)

        {
                "login":"SrgGrch",
                "university":"NSTU",
                "email":"example@stud.nstu.ru",
                "password":"qwer2017",
                "city":"Novosibirsk",
                "genres": ["1", "3"],
                "rating":"4.3"
            }


+ Response 201 (application/json)

        {
            "status": "OK",
            "data": 
            {
                "id":"1",
                "login":"SrgGrch",
                "name": "Sergey G."
                "university":"NSTU",
                "email":"example@stud.nstu.ru",
                "password":"qwer2017",
                "city":"Novosibirsk",
                "genres": ["1", "3"],
                "rating":"4.3"
            }
        }
        
### Delete User By ID [DELETE/users/3]

+ Response 200 (application/json)

            {
                "status": "OK"
            }
            
### Update User By ID [PUT/users/1]

+ Response 200 (application/json)

            {
                "name": "Sergey"
            }